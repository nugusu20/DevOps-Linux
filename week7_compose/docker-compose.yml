services:
  backend:
    image: python:3.12-slim
    working_dir: /app
    command: python -m http.server 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_net
    volumes:
      - ./config.json:/app/config/config.json:ro
    restart: on-failure
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000', timeout=2).status==200 else 1)"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: example
      POSTGRES_DB: appdb
    networks:
      - app_net
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:

networks:
  app_net:
    driver: bridge
